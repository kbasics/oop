public void Insert1(int x)
        {
            Node p =root;
            Node par=null;
            while(p!=null)
            {
                if(x<p.info)
                    p=p.lchild;
                else if(x>p.info)
                    p=p.rchild;
                else
                {
                     Console.WriteLine(x + " se vec nalazi u stablu");
                    return;
                }
            }
            Node temp=new Node(x);
            if(par==null)
                root=temp;
            else if(x<par.info)
                par.lchild=temp;
            else if(x>par.info)
                par.rchild=temp;
        }
        public bool Search(int x)
        { 
            return(Search(root,x)!=null);
        }
        private Node Search(Node p, int x)
        { 
            if(p==null)
               return null; 
            else if(x<p.info)
                return Search(p.lchild,x);
            else if(x>p.info) 
                return Search(p.rchild,x);
            return p; 
        }
		public void Delete(int x)
        {
            root=Delete(root,x);
        }
        private Node Delete(Node p, int x)
        {
            Node ch,s;
            if(p==null)
            {
                Console.WriteLine(x + " nije pronadjen");
                return p;
            }
            if(x<p.info) 
                p.lchild=Delete(p.lchild,x);
            else if(x>p.info)
                p.rchild=Delete(p.rchild,x);
            else
            {
                
                if(p.lchild!=null && p.rchild!=null) 
                {
                    s=p.rchild;
                    while(s.lchild!=null)
                        s=s.lchild;
                    p.info=s.info;
                    p.rchild=Delete(p.rchild, s.info);
                }
                else 
                {
                    if(p.lchild!=null) 
                        ch=p.lchild;
                    else 
                        ch=p.rchild;
                    p=ch;
                }
            }
            return p;
        }
		public int Min1()
        {
            if(IsEmpty())
            {
                Console.WriteLine("Stablo je prazno");
                return 0;
            }
            Node p = root;
            while (p.lchild != null)
                p = p.lchild;
            return p.info;
        }
        public int Max1()
        {
            if (IsEmpty())
            {
                Console.WriteLine("Stablo je prazno");
                return 0;
            }
            Node p = root;
            while (p.rchild != null)
                p = p.rchild;
            return p.info;
        }
		public void Display()
        {
            Display(root, 0);
            Console.WriteLine();
        }
        private void Display(Node p, int level)
        {
            int i;
            if (p == null)
                return;
            Display(p.rchild, level + 1);
            Console.WriteLine();
            for (i = 0; i < level; i++)
                Console.Write("   ");
            Console.Write(p.info);
            Display(p.lchild,level+1);
        }